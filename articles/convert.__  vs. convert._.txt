convert._$  vs. convert.$
<p>In this article we will explain the differences between <strong>convert._$</strong> and <strong>convert.$</strong></p>
<h2>CONVERT._$ - use it inside Code Editor</h2>
<p><strong>convert._$</strong> is a <strong>jQuery reference</strong> modified in such a way so that the variation code <strong>can be executed multiple times while the page is still loading</strong>. We execute the code every 50 ms until there's nothing left inside the code that seems to need processing, or until DOM ready is hit. Let's have an example to understand how it works:</p>
<pre class=" language-javascript"><code class=" language-javascript">convert<span class="token punctuation">.</span><span class="token function">_$</span><span class="token punctuation">(</span><span class="token string">"a.login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">"Login here"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
convert<span class="token punctuation">.</span><span class="token function">_$</span><span class="token punctuation">(</span><span class="token string">"a.loginFooter"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">"Login"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>We would execute this code immediately as our script finishes loading. It's very likely that is at the very beginning of the page load when not all the page was rendered yet. Let's suppose, at the moment of the first run, the <strong>a.login is available</strong> but <strong>a.loginFooter is not available</strong>. The effect of the code would be that the text of the <strong>a.login link</strong> would be changed to <strong>"Login here".</strong></p>
<p>After another 50 ms, we run the code again since there's one element that was not found. This time, the <strong>a.loginFooter is available</strong> and its text is changed to<strong>"Login";</strong> the <strong>a.login is not changed again</strong> since it was changed before.</p>
<p>As can be noticed, we <strong>wrapped the jQuery library into our own convert._$ function</strong> so that we can intercept the elements look-ups and know when the code <em>"finished executing"</em>.</p>
<p>This allows us to run the code and change the elements without waiting for the <strong>DOM ready </strong>(which would ensure everything was loaded) since that takes time and users would experience a flickering effect (old version visible and then swapped with the new version).</p>
<h2>CONVERT.$ - use it inside Custom Javascript</h2>
<p><strong>convert.$</strong> exposes the unmodified version of Jquery for you to use, without the benefits of the modified version.</p>